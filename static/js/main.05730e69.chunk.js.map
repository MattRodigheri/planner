{"version":3,"sources":["Header.js","AddToDays.js","Task.js","Day.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","className","onClick","selectDay","AddToDays","state","daysAdded","showDayOptions","bind","confirmDaysAdded","this","setState","selectDaysToAdd","event","target","checked","push","name","splice","indexOf","task","addToDays","dayOptions","type","onChange","handleChange","icon","faCalendarCheck","faCalendarPlus","React","Component","Task","newEntry","value","editInput","editIndex","taskIndex","defaultValue","editValue","onKeyDown","key","confirmEdit","faCheckSquare","faHotdog","htmlFor","delete","faTrashAlt","edit","faEdit","Day","confirmAddition","newTask","add","ReactDOM","findDOMNode","querySelector","tasks","day","map","i","dayName","faPlus","App","moment","format","toLowerCase","selectedDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","fetch","then","data","json","res","dayClicked","axios","post","params","id","array","index","days","dayToAddTo","includes","arr","Boolean","window","location","hostname","match","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.05730e69.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Header(props) {\n  return (\n    <div className=\"header\">\n      <button onClick={() => props.selectDay(\"sunday\")}>Sunday</button>\n      <button onClick={() => props.selectDay(\"monday\")}>Monday</button>\n      <button onClick={() => props.selectDay(\"tuesday\")}>Tuesday</button>\n      <button onClick={() => props.selectDay(\"wednesday\")}>Wednesday</button>\n      <button onClick={() => props.selectDay(\"thursday\")}>Thursday</button>\n      <button onClick={() => props.selectDay(\"friday\")}>Friday</button>\n      <button onClick={() => props.selectDay(\"saturday\")}>Saturday</button>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCalendarPlus,\n  faCalendarCheck\n} from \"@fortawesome/free-solid-svg-icons\";\n\nclass AddToDays extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      daysAdded: []\n    };\n\n    this.showDayOptions = this.showDayOptions.bind(this);\n    this.confirmDaysAdded = this.confirmDaysAdded.bind(this);\n  }\n\n  showDayOptions() {\n    this.setState({\n      selectDaysToAdd: true\n    });\n  }\n\n  handleChange(event) {\n    const daysAdded = this.state.daysAdded;\n\n    if (event.target.checked) {\n      daysAdded.push(event.target.name);\n    } else {\n      daysAdded.splice(daysAdded.indexOf(event.target.name), 1);\n    }\n\n    this.setState({\n      [this.props.task]: daysAdded\n    });\n  }\n\n  confirmDaysAdded() {\n    this.props.addToDays(this.props.task, this.state.daysAdded);\n    this.setState({\n      selectDaysToAdd: false\n    });\n  }\n\n  render() {\n    let dayOptions;\n    if (this.state.selectDaysToAdd) {\n      dayOptions = (\n        <div>\n          <div className=\"dayOption\">\n            <input\n              type=\"checkbox\"\n              name=\"sunday\"\n              onChange={event => this.handleChange(event)}\n            />\n            <span className=\"dayLabel\">Sunday</span>\n          </div>\n          <div className=\"dayOption\">\n            <input\n              type=\"checkbox\"\n              name=\"monday\"\n              onChange={event => this.handleChange(event)}\n            />\n            <span className=\"dayLabel\">Monday</span>\n          </div>\n          <div className=\"dayOption\">\n            <input\n              type=\"checkbox\"\n              name=\"tuesday\"\n              onChange={event => this.handleChange(event)}\n            />\n            <span className=\"dayLabel\">Tuesday</span>\n          </div>\n          <div className=\"dayOption\">\n            <input\n              type=\"checkbox\"\n              name=\"wednesday\"\n              onChange={event => this.handleChange(event)}\n            />\n            <span className=\"dayLabel\">Wednesday</span>\n          </div>\n          <div className=\"dayOption\">\n            <input\n              type=\"checkbox\"\n              name=\"thursday\"\n              onChange={event => this.handleChange(event)}\n            />\n            <span className=\"dayLabel\">Thursday</span>\n          </div>\n          <div className=\"dayOption\">\n            <input\n              type=\"checkbox\"\n              name=\"friday\"\n              onChange={event => this.handleChange(event)}\n            />\n            <span className=\"dayLabel\">Friday</span>\n          </div>\n          <div className=\"dayOption\">\n            <input\n              type=\"checkbox\"\n              name=\"saturday\"\n              onChange={event => this.handleChange(event)}\n            />\n            <span className=\"dayLabel\">Saturday</span>\n          </div>\n          <button className=\"buttons\" onClick={this.confirmDaysAdded}>\n            <FontAwesomeIcon icon={faCalendarCheck} />\n          </button>\n        </div>\n      );\n    }\n    return (\n      <span>\n        <button className=\"buttons\" onClick={this.showDayOptions}>\n          <FontAwesomeIcon icon={faCalendarPlus} />\n        </button>\n        {dayOptions}\n      </span>\n    );\n  }\n}\n\nexport default AddToDays;\n","import React from \"react\";\nimport AddToDays from \"./AddToDays.js\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTrashAlt,\n  faEdit,\n  faCheckSquare,\n  faHotdog\n} from \"@fortawesome/free-solid-svg-icons\";\n\nclass Task extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {};\n  }\n\n  handleChange(event) {\n    this.setState({\n      newEntry: event.target.value\n    });\n  }\n\n  render() {\n    let editInput;\n    if (this.props.editIndex === this.props.taskIndex) {\n      editInput = (\n        <div>\n          <input\n            className=\"editInput\"\n            type=\"text\"\n            defaultValue={this.props.editValue}\n            onChange={event => this.handleChange(event)}\n            onKeyDown={event => {\n              if (event.key === \"Enter\") {\n                this.props.confirmEdit(this.state.newEntry);\n              }\n            }}\n          />\n\n          <button\n            className=\"buttons\"\n            onClick={() => this.props.confirmEdit(this.state.newEntry)}\n          >\n            <FontAwesomeIcon icon={faCheckSquare} />\n          </button>\n        </div>\n      );\n    }\n    return (\n      <div>\n        <FontAwesomeIcon icon={faHotdog} />\n        <label htmlFor=\"task\">{this.props.task}</label>\n        <button\n          className=\"buttons\"\n          onClick={() => {\n            this.props.delete(this.props.task);\n          }}\n        >\n          <FontAwesomeIcon icon={faTrashAlt} />\n        </button>\n        <button\n          className=\"buttons\"\n          onClick={() => this.props.edit(this.props.task)}\n        >\n          <FontAwesomeIcon icon={faEdit} />\n        </button>\n\n        <AddToDays addToDays={this.props.addToDays} task={this.props.task} />\n\n        {editInput}\n      </div>\n    );\n  }\n}\n\nexport default Task;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Task from \"./Task.js\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus } from \"@fortawesome/free-solid-svg-icons\";\n\nclass Day extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n\n    this.handleChange = this.handleChange.bind(this);\n    this.confirmAddition = this.confirmAddition.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      newTask: event.target.value\n    });\n  }\n\n  confirmAddition(event) {\n    this.props.add(this.state.newTask);\n\n    const node = ReactDOM.findDOMNode(this);\n    node.querySelector(\".input\").value = \"\";\n\n    this.setState({\n      newTask: \"\"\n    });\n  }\n\n  render() {\n    let tasks;\n    if (this.props.day) {\n      tasks = this.props.day.map((task, i) => {\n        return (\n          <Task\n            key={i}\n            taskIndex={i}\n            task={task}\n            delete={this.props.delete}\n            edit={this.props.edit}\n            editIndex={this.props.editIndex}\n            editValue={this.props.editValue}\n            confirmEdit={this.props.confirmEdit}\n            addToDays={this.props.addToDays}\n          />\n        );\n      });\n    }\n    return (\n      <div className=\"day\">\n        <h1>{this.props.dayName}</h1>\n        {tasks}\n        <input\n          type=\"text\"\n          className=\"input\"\n          onChange={event => this.handleChange(event)}\n          onKeyDown={event => {\n            if (event.key === \"Enter\") {\n              this.confirmAddition();\n            }\n          }}\n        />\n        <button className=\"buttons\" onClick={this.confirmAddition}>\n          <FontAwesomeIcon icon={faPlus} />\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Day;\n","import React from \"react\";\nimport moment from \"moment\";\nimport axios from \"axios\";\nimport \"./App.css\";\nimport Header from \"./Header.js\";\nimport Day from \"./Day.js\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      dayName: moment()\n        .format(\"dddd\")\n        .toLowerCase(),\n      selectedDay: [],\n      sunday: [],\n      monday: [],\n      tuesday: [],\n      wednesday: [],\n      thursday: [],\n      friday: [],\n      saturday: []\n    };\n\n    this.selectDay = this.selectDay.bind(this);\n    this.add = this.add.bind(this);\n    this.delete = this.delete.bind(this);\n    this.edit = this.edit.bind(this);\n    this.confirmEdit = this.confirmEdit.bind(this);\n    this.addToDays = this.addToDays.bind(this);\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3001/api/data\")\n      .then(data => data.json())\n      .then(res => {\n        this.setState({\n          sunday: res.data.sunday,\n          monday: res.data.monday,\n          tuesday: res.data.tuesday,\n          wednesday: res.data.wednesday,\n          thursday: res.data.thursday,\n          friday: res.data.friday,\n          saturday: res.data.saturday,\n          selectedDay: res.data[this.state.dayName]\n        });\n\n        this.setState({\n          [this.state.dayName]: res.data[this.state.dayName]\n        });\n      });\n  }\n\n  selectDay(dayClicked) {\n    this.setState({\n      dayName: dayClicked,\n      selectedDay: this.state[dayClicked]\n    });\n  }\n\n  add(newTask) {\n    this.setState(\n      {\n        selectedDay: [...this.state.selectedDay, newTask],\n        [this.state.dayName.toLowerCase()]: [...this.state.selectedDay, newTask]\n      },\n      () => {\n        axios.post(\"http://localhost:3001/api/data\", {\n          params: {\n            sunday: this.state.sunday,\n            monday: this.state.monday,\n            tuesday: this.state.tuesday,\n            wednesday: this.state.wednesday,\n            thursday: this.state.thursday,\n            friday: this.state.friday,\n            saturday: this.state.saturday,\n            id: \"5d894728738b5c797cf5ac8f\"\n          }\n        });\n      }\n    );\n  }\n\n  delete(task) {\n    const array = this.state.selectedDay;\n    const index = array.indexOf(task);\n    if (index !== -1) {\n      array.splice(index, 1);\n      this.setState({ selectedDay: array }, () => {\n        axios.post(\"http://localhost:3001/api/data\", {\n          params: {\n            sunday: this.state.sunday,\n            monday: this.state.monday,\n            tuesday: this.state.tuesday,\n            wednesday: this.state.wednesday,\n            thursday: this.state.thursday,\n            friday: this.state.friday,\n            saturday: this.state.saturday,\n            id: \"5d894728738b5c797cf5ac8f\"\n          }\n        });\n      });\n    }\n  }\n\n  edit(task) {\n    const array = this.state.selectedDay;\n    const index = array.indexOf(task);\n    this.setState({\n      editIndex: index,\n      editValue: task\n    });\n  }\n\n  confirmEdit(event) {\n    const array = this.state.selectedDay;\n    const index = array.indexOf(this.state.editValue);\n    array.splice(index, 1, event);\n    this.setState(\n      {\n        selectedDay: array,\n        editIndex: -1\n      },\n      () => {\n        axios.post(\"http://localhost:3001/api/data\", {\n          params: {\n            sunday: this.state.sunday,\n            monday: this.state.monday,\n            tuesday: this.state.tuesday,\n            wednesday: this.state.wednesday,\n            thursday: this.state.thursday,\n            friday: this.state.friday,\n            saturday: this.state.saturday,\n            id: \"5d894728738b5c797cf5ac8f\"\n          }\n        });\n      }\n    );\n  }\n\n  addToDays(task, days) {\n    // eslint-disable-next-line\n    for (const dayToAddTo in this.state) {\n      if (days.includes(dayToAddTo)) {\n        const arr = this.state[dayToAddTo];\n        arr.push(task);\n        this.setState(\n          {\n            [dayToAddTo]: arr\n          },\n          () => {\n            axios.post(\"http://localhost:3001/api/data\", {\n              params: {\n                sunday: this.state.sunday,\n                monday: this.state.monday,\n                tuesday: this.state.tuesday,\n                wednesday: this.state.wednesday,\n                thursday: this.state.thursday,\n                friday: this.state.friday,\n                saturday: this.state.saturday,\n                id: \"5d894728738b5c797cf5ac8f\"\n              }\n            });\n          }\n        );\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        <Header selectDay={this.selectDay} />\n\n        <Day\n          dayName={this.state.dayName}\n          day={this.state.selectedDay}\n          add={this.add}\n          delete={this.delete}\n          edit={this.edit}\n          editIndex={this.state.editIndex}\n          editValue={this.state.editValue}\n          confirmEdit={this.confirmEdit}\n          addToDays={this.addToDays}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}